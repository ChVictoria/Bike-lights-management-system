/**
  ******************** (C) COPYRIGHT 2020 STMicroelectronics *******************
  * @file    readme.txt
  * @author  System Research & Applications Team - Catania Lab.
  * @version V2.1.0
  * @date    15-May-2020
  * @brief   Description of the Application FW.
  ******************************************************************************
  * Attention
  *
  * COPYRIGHT(c) 2020 STMicroelectronics
  *
  * Redistribution and use in source and binary forms, with or without modification,
  * are permitted provided that the following conditions are met:
  *   1. Redistributions of source code must retain the above copyright notice,
  *      this list of conditions and the following disclaimer.
  *   2. Redistributions in binary form must reproduce the above copyright notice,
  *      this list of conditions and the following disclaimer in the documentation
  *      and/or other materials provided with the distribution.
  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  *      may be used to endorse or promote products derived from this software
  *      without specific prior written permission.
  *
  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  *
  ******************************************************************************
  */

Application Description 

 This firmware package includes Components Device Drivers, Board Support Package
 and example application for the following STMicroelectronics elements:
 - STEVAL-STLKT01V1 (SensorTile) evaluation board that contains the following components:
	. MEMS sensor devices: HTS221, LPS22HB, LSM303AGR, LSM6DSM
	. digital microphone: MP34DT04
	. Gas Gauge IC with alarm output: STC3115
 - MotionAR software provides real-time activity recognition data using MEMS accelerometer sensor
 - MotionCP software provides carry Position recognition data using MEMS accelerometer sensor
 - MotionFX (iNEMOEngine PRO) suite uses advanced algorithms to integrate outputs
   from multiple MEMS sensors in a smart way, independent of environmental conditions,
   to reach optimal performance. Real-time motion-sensor data fusion is set to significantly
   improve the user experience, increasing accuracy, resolution, stability and response time.
 - MotionGR software provides carry Gesture recognition data using MEMS accelerometer sensor
 - BlueVoiceADPCM software enables real-time half-duplex voice-over-Bluetooth low energy communication profile.
   It includes one characteristic for audio transmission and one for synchronization and it is responsible for audio encoding and periodical data
   transmission on Server side and for decoding of received voice data on Client side
 - USB device library provides support of multi packet transfer to allow sending big amount of data without split 
   them into max packet size transfers.
 - FatFs generic FAT file system module provides access the storage devices such as memory card and hard disk.
 - FreeRTOS Real Time Kernel/Scheduler that allows applications to be organized as a collection of independent threads of execution
   (under MIT open source license)
   
 The Example application initializes all the Components and Library creating 3 Custom Bluetooth services:
 - The first service exposes all the HW and SW characteristics:
   . HW characteristics:
       . related to MEMS sensor devices: Temperature, Humidity, Pressure, Magnetometer, Gyroscope and Accelleromenter
	 and Microphones Signal Noise dB level.
       . battery Gas Gauge
   . SW characteristics:
       . the quaternions generated by the MotionFX library in short precision
       . the activity recognized using the MotionAR algorithm
       . the carry position recognized using the MotionCP algorithm,
       . the Gesture recognized using the MotionGR algorithm
       . It uses BlueVoiceADPCM software for real-time half-duplex voice-over-Bluetooth low energy communication profile.
       . FatFs generic FAT file system for SD card data logging for environmental, mens and audio data (for only SensorTile).
         This functionality on SensorTile board is enabled as default through the code in the line
            #define ALLMEMS2_ENABLE_SD_CARD_LOGGING
	 on file:
	    Projects\STM32L476RG-SensorTile\Applications\ALLMEMS2\Inc\ALLMEMS2_config.h
 - The second Service exposes the console services where we have stdin/stdout and stderr capabilities
 - The last Service is used for configuration purpose
 
 The example application allows the user to control the initialization phase via UART.
 Launch a terminal application and set the UART port to 115200 bps, 8 bit, No Parity, 1 stop bit.
 For having the same UART functionality on SensorTile board, is necessary to recompile the code uncomment the line 
	//#define ALLMEMS2_ENABLE_PRINTF
 on file:
	Projects\STM32L476RG-SensorTile\Applications\ALLMEMS2\Inc\ALLMEMS2_config.h
 and if not enabled the SD card data logging functionality.
 This enables the UART that starts with a delay of 10 Seconds for allowing the time to open the UART for looking the initialization phase.

 This example must be used with the related ST BLE Sensor Android/iOS application available on Play/itune store (Version 4.5.0 or higher),
 in order to read the sent information by Bluetooth Low Energy protocol
  
                                --------------------
                                | VERY IMPORTANT : |
                                --------------------
 1) This example support the Firmware-Over-The-Air (FOTA) update using the ST BLE Sensor Android/iOS
    application (Version 3.0.0 or higher)
 
 2) This example must run starting at address 0x08004000 in memory and works ONLY if the BootLoader 
    is saved at the beginning of the FLASH (address 0x08000000)
 
 3) If the user presses the blue user button on Nucleo board, 3 times on less that 2 seconds,
    he forces a new Calibration for MotionFX Library
    The calibration value could be stored on FLASH memory or in RAM for avoiding to do the calibration at each board reset
 
 4) For each IDE (IAR/µVision/System Workbench) there are some scripts *.bat/*.sh that makes the following operations:
    - Full Flash Erase
    - Load the BootLoader on the rigth flash region
    - Load the Program (after the compilation) on the rigth flash region (This could be used for a FOTA)
    - Dump back one single binary that contain BootLoader+Program that could be 
      flashed at the flash beginning (address 0x08000000) (This COULD BE NOT used for FOTA)
    - Reset the board
 
                                    ----------
                                    | ISSUE: |
                                    ----------
 - Led features is not enabled for SensorTile when SD card logging feature is enabled and during the recording only
  (The led will blink during the data logging only).
 - A compiler warning is generated from STM32 Audio Library middlewares when using the library in IAR v 8.x. and Open System Workbench for STM32.
   It doesn't affect library performances.

                                --------------------
                                | KNOWN LIMITATION |
                                --------------------
 - Even if FP-SNS-ALLMEMS1 send 100 quaternions/second with Bluetooth, the mobile devices could render only 60 frames/second
 
 Inside the Binary Directory there are the following binaries:
Binary/
    +-- STM32L476RG-SensorTile_ALLMEMS2_v2.1.0.bin     (Program without BootLoader. COULD BE USED     for FOTA)
    +-- STM32L476RG-SensorTile_ALLMEMS2_BL_v2.1.0.bin  (Program with BootLoader.    COULD NOT BE USED for FOTA)

 The Magneto Calibration provided by MotionFX (INEMOEngine PRO) could be saved in FLASH.
 In this way it's not necessary to make again the calibration at every STM32 Nucleo board reset.

 For avoiding accidental erasure of the calibration data, for forcing a new calibration it is necessary to press 
 the blue user button on the STM32 Nucleo board 3 times in less than 2 seconds.

@par Hardware and Software environment

  - This example runs on STEVAL-STLKT01V1 (SensorTile) evaluation board
    
  - This example must be used with the related ST BLE Sensor Android/iOS application (Version 4.5.0 or higher) available on Play/itune store,
    in order to read the sent information by Bluetooth Low Energy protocol
    
@par STM32Cube packages:
  - STM32L4xx drivers from STM32CubeL4 V1.15.0
@par X-CUBE packages:
  - X-CUBE-BLE1 V5.0.0
  - X-CUBE-MEMS1 V7.1.0
@par STSW packages:
  - STSW-STLKT01 V2.1.2

@par How to use it ? 

This package contains projects for 3 IDEs viz. IAR, µVision and System Workbench. 
In order to make the  program work, you must do the following:
 - WARNING: before opening the project with any toolchain be sure your folder
   installation path is not too in-depth since the toolchain may report errors
   after building.

For IAR:
 - Open IAR toolchain (this firmware has been successfully tested with Embedded Workbench V8.32.3).
 - Open the IAR project file EWARM\STM32L476RG-SensorTile.eww
 - Rebuild all files and run CleanALLMEMS2_IAR_ST.bat script that you find on the same directory.

For µVision:
 - Open µVision toolchain (this firmware has been successfully tested with MDK-ARM Professional Version: 5.29.0)
 - Open the µVision project file MDK-ARM\Project.uvprojx
 - Rebuild all files and run CleanALLMEMS2_MDK-ARM_ST script that you find on the same directory.
		
For System Workbench:
 - Open STM32CubeIDE (this firmware has been successfully tested with Version 1.3.1)
 - Set the default workspace proposed by the IDE (please be sure that there are not spaces in the workspace path).
 - Press "File" -> "Import" -> "Existing Projects into Workspace"; press "Browse" in the "Select root directory" and choose the path where the System
   Workbench project is located (it should be SW4STM32\STM32L476RG_SENSORTILE). 
 - Rebuild all files and and run these script that you find on the same directory:
   - if you are on windows and you had installed the STM32 ST-Link utility:
	- CleanALLMEMS2_STM32CubeIDE_ST.bat
   - Otherwise (Linux/iOS or Windows without the STM32 ST-Link Utility):
	- CleanALLMEMS2_STM32CubeIDE_ST.sh
		
 /******************* (C) COPYRIGHT 2019 STMicroelectronics *****END OF FILE****/
